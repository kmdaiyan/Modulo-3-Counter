module sd_moore(clk,reset,z);
  
  input clk,reset;
  output reg z;	
		parameter S0=   3'd0; //states
		parameter S1=   3'd1;
		parameter S2=  3'd2;
      
        	  
  reg [2:1]current_state;
  reg [2:1]next_state;	
  
  always@(negedge reset or posedge clk) // reset
            begin
            if(reset==0)
              current_state<=S0;
              else
                current_state<=next_state;
            end
		
  always@( current_state)  //state change
			
              case(current_state)
                    S0: next_state <= S1;
                    S1: next_state <= S2;
                    S2: next_state <= S0;
                    default: next_state <= S0;
                  
                  endcase
     
          
  always@(current_state) //output
    begin
      case(current_state)
        S0: z<=0;
        S1: z<=0;
        S2: z<=1;
      endcase
    end
       
          endmodule
                 